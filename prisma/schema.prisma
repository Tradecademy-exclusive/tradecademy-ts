generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  username      String         @unique
  email         String         @unique
  password      String
  picture       String?
  courses       Course[]
  plan          Plan           @relation(fields: [planId], references: [id])
  previousPlans PreviousPlan[]
  focusPoint    FocusPoint     @relation(fields: [focusPointId], references: [id])
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  planId        String
  focusPointId  String
  Note          Note[]
}

model signupToken {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Course {
  id              String    @id @default(uuid())
  title           String
  description     String
  cover           String
  chapters        Chapter[]
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  price           Int
  discountedPrice Int
  materials       String?
  duration        String
  user            User?     @relation(fields: [userId], references: [id])
  userId          String?
  published       Boolean   @default(false)
}

model Chapter {
  id        String   @id @default(uuid())
  title     String
  lessons   Lesson[]
  course    Course?  @relation(fields: [courseId], references: [id])
  courseId  String?
  quiz      String?
  chapter   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Lesson {
  id        String   @id @default(uuid())
  title     String
  url       String?
  content   String?
  PDF       String?
  thumbnail String?
  order     Int
  chapter   Chapter? @relation(fields: [chapterId], references: [id])
  chapterId String?
  Note      Note?    @relation(fields: [noteId], references: [id])
  noteId    String?
}

model Plan {
  id    String   @id @default(uuid())
  steps String[]
  User  User[]
}

model PreviousPlan {
  id     String   @id @default(uuid())
  steps  String[]
  User   User?    @relation(fields: [userId], references: [id])
  userId String?
}

model FocusPoint {
  id          String @id @default(uuid())
  description String
  User        User[]
}

model Note {
  id          String   @id @default(uuid())
  drawSession String
  video       Lesson[]
  user        User     @relation(fields: [userId], references: [id])
  userId      String
}
